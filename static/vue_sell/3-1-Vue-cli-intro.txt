同学们，你们好，这一章，我们要开始实战预热了，我们先来学一下，Vue.js开发的利器Vue-cli。
什么是Vue-cli？首先它是一个Vue的脚手架工具，那什么是脚手架呢？
在工地上，脚手架是工人们搭建的架子，它能帮助工人们作业。
那在我们技术圈，脚手架就是用来帮助我们编写好基础的代码，那Vue-cli就是一个帮助我们编写好Vue.js基础代码的工具。
它能够帮助我们搞定：目录结构、本地调试、代码部署、热加载、单元测试等工作。
我们来GitHub看一下：这个就是vue-cli的GitHub地址。
一般我们学习一个开源工具，最好的办法就是去它的GitHub看它的Readme，那我们在这里可以看到它的安装方法、它的使用方法等等。
Vue-cli是一个node包，所以我们要通过npm去安装它，这里我们用到了-g全局安装：
也就是说，当我们安装成功后，我们就可以全局使用vue这个命令了。
再看它的使用方法，它是通过vue init <template-name> <project-name>这种方式去初始化项目。
template-name是什么？就是它的模板名称，就是你安装成功后，它给你自动生成的一个代码模板。
它分为三类：第一类是官方模板，就是我们通常用的，官方模板有基于webpack的，有基于browserify的，还有一些其它的。
比如说webpack的简洁版、browserify的简洁版等等。
我们也可以自定义模板，比如用vue init username/repo my-project-name,其实相当于从自己的仓库去安装。
无论是官方模板还是自定义模板，它都是在去GitHub的仓库里去安装的，我么可以具体看一个：
比如说webpack模板，我们点进去，可以看到这就是webpack模板的一个仓库地址，这里面是它的代码，有一个template。
这个目录，我们再点进去，可以看到，这一部分代码，也就是我们最终安装后，会生成的一个代码，目录结构可以在这里面看到。
也就是说，我们想要自定义一个template的话，我们就可以参考这个webpack它是怎么去写的。
我们就可以自定义属于自己的一个模板。那，这个project-name是什么？
也就是我们安装后，会生成一个名为project-name的一个目录，然后把它模板的所有代码都生成到这个目录下。